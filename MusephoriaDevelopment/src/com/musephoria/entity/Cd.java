package com.musephoria.entity;
// default package
// Generated Nov 1, 2015 11:57:06 AM by Hibernate Tools 4.0.0.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Cd generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "cd", catalog = "musephoria")
public class Cd implements java.io.Serializable {

	private Integer cdId;
	private String name;
	private String description;
	private Float price;
	private Integer quantity;
	private String genre;
	private String artist;
	private Date year;
	private String rating;
	private String review;
	private String language;
	private Integer numberOfTrack;
	private byte[] albumArt;
	private Boolean isCdActive;
	private Set<Purchaseorderitem> purchaseorderitems = new HashSet<Purchaseorderitem>(0);

	public Cd() {
	}

	public Cd(String name, String description, Float price, Integer quantity, String genre, String artist, Date year,
			String rating, String review, String language, Integer numberOfTrack, byte[] albumArt, Boolean isCdActive,
			Set<Purchaseorderitem> purchaseorderitems) {
		this.name = name;
		this.description = description;
		this.price = price;
		this.quantity = quantity;
		this.genre = genre;
		this.artist = artist;
		this.year = year;
		this.rating = rating;
		this.review = review;
		this.language = language;
		this.numberOfTrack = numberOfTrack;
		this.albumArt = albumArt;
		this.isCdActive = isCdActive;
		this.purchaseorderitems = purchaseorderitems;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "CdId", unique = true, nullable = false)
	public Integer getCdId() {
		return this.cdId;
	}

	public void setCdId(Integer cdId) {
		this.cdId = cdId;
	}

	@Column(name = "Name", length = 25)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "Description", length = 300)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "Price", precision = 12, scale = 0)
	public Float getPrice() {
		return this.price;
	}

	public void setPrice(Float price) {
		this.price = price;
	}

	@Column(name = "Quantity")
	public Integer getQuantity() {
		return this.quantity;
	}

	public void setQuantity(Integer quantity) {
		this.quantity = quantity;
	}

	@Column(name = "Genre", length = 10)
	public String getGenre() {
		return this.genre;
	}

	public void setGenre(String genre) {
		this.genre = genre;
	}

	@Column(name = "Artist", length = 25)
	public String getArtist() {
		return this.artist;
	}

	public void setArtist(String artist) {
		this.artist = artist;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "Year", length = 0)
	public Date getYear() {
		return this.year;
	}

	public void setYear(Date year) {
		this.year = year;
	}

	@Column(name = "Rating", length = 9)
	public String getRating() {
		return this.rating;
	}

	public void setRating(String rating) {
		this.rating = rating;
	}

	@Column(name = "Review", length = 10000)
	public String getReview() {
		return this.review;
	}

	public void setReview(String review) {
		this.review = review;
	}

	@Column(name = "Language", length = 25)
	public String getLanguage() {
		return this.language;
	}

	public void setLanguage(String language) {
		this.language = language;
	}

	@Column(name = "NumberOfTrack")
	public Integer getNumberOfTrack() {
		return this.numberOfTrack;
	}

	public void setNumberOfTrack(Integer numberOfTrack) {
		this.numberOfTrack = numberOfTrack;
	}

	@Column(name = "AlbumArt")
	public byte[] getAlbumArt() {
		return this.albumArt;
	}

	public void setAlbumArt(byte[] albumArt) {
		this.albumArt = albumArt;
	}

	@Column(name = "IsCdActive")
	public Boolean getIsCdActive() {
		return this.isCdActive;
	}

	public void setIsCdActive(Boolean isCdActive) {
		this.isCdActive = isCdActive;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cd")
	public Set<Purchaseorderitem> getPurchaseorderitems() {
		return this.purchaseorderitems;
	}

	public void setPurchaseorderitems(Set<Purchaseorderitem> purchaseorderitems) {
		this.purchaseorderitems = purchaseorderitems;
	}

}
