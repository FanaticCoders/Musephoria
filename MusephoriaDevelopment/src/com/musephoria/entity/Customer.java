package com.musephoria.entity;
// Generated Oct 19, 2015 11:46:19 PM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

/**
 * Customer generated by hbm2java
 */
@Entity
@Table(name = "customer", catalog = "musephoria")
@SuppressWarnings("serial")
public class Customer implements java.io.Serializable {

	private Integer customerId;
	private Date timeStamp;
	private String userName;
	private String password;
	private String sex;
	private Date dateOfBirth;
	private String defaultPaymentInfo;
	private boolean isCustomerActive;
	private Set<Session> sessions = new HashSet<Session>(0);
	private Set<Order> orders = new HashSet<Order>(0);
	private Set<Payment> payments = new HashSet<Payment>(0);
	private Set<Cart> carts = new HashSet<Cart>(0);
	private Set<Customerdetail> customerdetails = new HashSet<Customerdetail>(0);

	public Customer() {
	}

	public Customer(String userName, String password, String sex, Date dateOfBirth, String defaultPaymentInfo,
			boolean isCustomerActive) {
		this.userName = userName;
		this.password = password;
		this.sex = sex;
		this.dateOfBirth = dateOfBirth;
		this.defaultPaymentInfo = defaultPaymentInfo;
		this.isCustomerActive = isCustomerActive;
	}

	public Customer(String userName, String password, String sex, Date dateOfBirth, String defaultPaymentInfo,
			boolean isCustomerActive, Set<Session> sessions, Set<Order> orders, Set<Payment> payments, Set<Cart> carts,
			Set<Customerdetail> customerdetails) {
		this.userName = userName;
		this.password = password;
		this.sex = sex;
		this.dateOfBirth = dateOfBirth;
		this.defaultPaymentInfo = defaultPaymentInfo;
		this.isCustomerActive = isCustomerActive;
		this.sessions = sessions;
		this.orders = orders;
		this.payments = payments;
		this.carts = carts;
		this.customerdetails = customerdetails;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "CustomerId", unique = true, nullable = false)
	public Integer getCustomerId() {
		return this.customerId;
	}

	public void setCustomerId(Integer customerId) {
		this.customerId = customerId;
	}

	@Version
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "TimeStamp", nullable = false, length = 19)
	public Date getTimeStamp() {
		return this.timeStamp;
	}

	public void setTimeStamp(Date timeStamp) {
		this.timeStamp = timeStamp;
	}

	@Column(name = "UserName", nullable = false, length = 45)
	public String getUserName() {
		return this.userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	@Column(name = "Password", nullable = false, length = 25)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "Sex", nullable = false, length = 6)
	public String getSex() {
		return this.sex;
	}

	public void setSex(String sex) {
		this.sex = sex;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DateOfBirth", nullable = false, length = 10)
	public Date getDateOfBirth() {
		return this.dateOfBirth;
	}

	public void setDateOfBirth(Date dateOfBirth) {
		this.dateOfBirth = dateOfBirth;
	}

	@Column(name = "DefaultPaymentInfo", nullable = false, length = 7)
	public String getDefaultPaymentInfo() {
		return this.defaultPaymentInfo;
	}

	public void setDefaultPaymentInfo(String defaultPaymentInfo) {
		this.defaultPaymentInfo = defaultPaymentInfo;
	}

	@Column(name = "IsCustomerActive", nullable = false)
	public boolean isIsCustomerActive() {
		return this.isCustomerActive;
	}

	public void setIsCustomerActive(boolean isCustomerActive) {
		this.isCustomerActive = isCustomerActive;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<Session> getSessions() {
		return this.sessions;
	}

	public void setSessions(Set<Session> sessions) {
		this.sessions = sessions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<Order> getOrders() {
		return this.orders;
	}

	public void setOrders(Set<Order> orders) {
		this.orders = orders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<Payment> getPayments() {
		return this.payments;
	}

	public void setPayments(Set<Payment> payments) {
		this.payments = payments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<Cart> getCarts() {
		return this.carts;
	}

	public void setCarts(Set<Cart> carts) {
		this.carts = carts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<Customerdetail> getCustomerdetails() {
		return this.customerdetails;
	}

	public void setCustomerdetails(Set<Customerdetail> customerdetails) {
		this.customerdetails = customerdetails;
	}

}
